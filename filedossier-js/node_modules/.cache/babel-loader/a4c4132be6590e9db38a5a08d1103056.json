{"ast":null,"code":"import _slicedToArray from \"/home/develop01/work/filedossier/filedossier-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/develop01/work/filedossier/filedossier-js/src/Dossier.js\";\nimport React, { Suspense, useState, useEffect, useRef } from 'react';\nimport { Table, Button, Message, Loader, Icon } from 'semantic-ui-react';\nimport { DefaultApi as DossierApi } from '@ilb/filedossier-api/dist';\nimport DossierResource from './DossierResource';\nimport { useResource } from './ReactHelper';\n\nfunction Dossier({\n  dossierKey,\n  dossierPackage,\n  dossierCode\n}) {\n  const dossierApi = new DossierApi();\n  const dossierResource = new DossierResource(dossierApi, {\n    dossierKey,\n    dossierPackage,\n    dossierCode\n  });\n\n  const _useResource = useResource(() => dossierResource.getDossier()),\n        _useResource2 = _slicedToArray(_useResource, 2),\n        dossier = _useResource2[0],\n        getDossier = _useResource2[1];\n\n  useEffect(() => {\n    getDossier();\n  }, [dossierKey, dossierPackage, dossierCode]);\n  return React.createElement(\"div\", {\n    className: \"fileDosser\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, dossier.loading && React.createElement(Loader, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), dossier.error && React.createElement(Message, {\n    error: true,\n    visible: true,\n    content: dossier.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), dossier.value && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Name: \", dossier.value.name, dossier.value.dossierFile && React.createElement(Table, {\n    celled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Table.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"\\u0424\\u0430\\u0439\\u043B\"), React.createElement(Table.HeaderCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u0435\"))), React.createElement(Table.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, dossier.value.dossierFile.map(file => React.createElement(DossierFile, {\n    key: file.code,\n    file: file,\n    onChange: getDossier,\n    resource: dossierResource.getDossierFileResource(file.code),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))))));\n}\n\nfunction DossierFile({\n  file: {\n    code,\n    name,\n    exists\n  },\n  onChange,\n  resource\n}) {\n  const inputFileEl = useRef(null);\n\n  const remove = () => {\n    console.log('code', code);\n    onChange();\n  };\n\n  const upload = () => {\n    //console.log('upload', code, inputFileEl.current.files);\n    const files = inputFileEl.current.files; //        const formData = new FormData();\n    //\n    //        for (var i = 0; i < files.length; i++) {\n    //            formData.append(i, files.item(i));\n    //        }\n\n    resource.uploadContents(inputFileEl.current.files[0]);\n    onChange();\n  };\n\n  return React.createElement(Table.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, exists && React.createElement(\"a\", {\n    href: resource.getDownloadLink(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, name), !exists && name), React.createElement(Table.Cell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: remove,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    ref: inputFileEl,\n    type: \"file\",\n    name: \"file\",\n    onChange: upload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}\n\nexport default Dossier;","map":{"version":3,"sources":["/home/develop01/work/filedossier/filedossier-js/src/Dossier.js"],"names":["React","Suspense","useState","useEffect","useRef","Table","Button","Message","Loader","Icon","DefaultApi","DossierApi","DossierResource","useResource","Dossier","dossierKey","dossierPackage","dossierCode","dossierApi","dossierResource","getDossier","dossier","loading","error","value","name","dossierFile","map","file","code","getDossierFileResource","DossierFile","exists","onChange","resource","inputFileEl","remove","console","log","upload","files","current","uploadContents","getDownloadLink"],"mappings":"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","sourcesContent":["import React, { Suspense, useState, useEffect, useRef } from 'react';\nimport { Table, Button, Message, Loader, Icon } from 'semantic-ui-react';\nimport { DefaultApi as DossierApi} from '@ilb/filedossier-api/dist';\nimport DossierResource from './DossierResource';\nimport {useResource} from './ReactHelper';\n\nfunction Dossier( { dossierKey, dossierPackage, dossierCode}) {\n    const dossierApi = new DossierApi();\n    const dossierResource = new DossierResource(dossierApi, {dossierKey, dossierPackage, dossierCode});\n\n    const [dossier, getDossier] = useResource(() => dossierResource.getDossier());\n\n    useEffect(() => {\n        getDossier();\n    }, [dossierKey, dossierPackage, dossierCode]);\n\n    return (\n            <div className=\"fileDosser\">\n                {dossier.loading && <Loader active /> }\n                {dossier.error && <Message error visible content={dossier.error}/> }\n                {dossier.value && <div>\n                    Name: {dossier.value.name}\n                    {dossier.value.dossierFile &&\n                                    <Table celled>\n                                        <Table.Header>\n                                            <Table.Row>\n                                                <Table.HeaderCell>Файл</Table.HeaderCell>\n                                                <Table.HeaderCell>Действие</Table.HeaderCell>\n                                            </Table.Row>\n                                        </Table.Header>\n\n                                        <Table.Body>\n                                            {dossier.value.dossierFile.map(file => (\n                                                                        <DossierFile\n                                                                            key={file.code}\n                                                                            file={file}\n                                                                            onChange={getDossier}\n                                                                            resource={dossierResource.getDossierFileResource(file.code)}\n                                                                            />\n                                                            ))}\n                                        </Table.Body>\n                                    </Table>\n                    }\n                </div>}\n            </div>\n            );\n}\n\nfunction DossierFile( { file: { code, name,exists }, onChange, resource }) {\n\n    const inputFileEl = useRef(null);\n\n    const remove = () => {\n        console.log('code', code);\n        onChange();\n    };\n\n    const upload = () => {\n        //console.log('upload', code, inputFileEl.current.files);\n        const files = inputFileEl.current.files;\n\n//        const formData = new FormData();\n//\n//        for (var i = 0; i < files.length; i++) {\n//            formData.append(i, files.item(i));\n//        }\n\n        resource.uploadContents(inputFileEl.current.files[0]);\n        onChange();\n    };\n\n\n    return (\n            <Table.Row>\n                <Table.Cell>\n                {exists && <a href={resource.getDownloadLink()}>{name}</a>}\n                {!exists && name }\n                </Table.Cell>\n                <Table.Cell>\n                    <Button onClick={remove}>\n\t\t    <Icon name='trash' />\n\t\t    </Button>\n                    <input ref={inputFileEl} type=\"file\" name=\"file\" onChange={upload}/>\n                </Table.Cell>\n            </Table.Row>\n            );\n}\n\nexport default Dossier;\n"]},"metadata":{},"sourceType":"module"}